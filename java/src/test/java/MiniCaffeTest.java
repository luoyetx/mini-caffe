/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import static org.junit.Assert.*;
import java.nio.file.*;
import java.io.IOException;
import com.luoyetx.minicaffe.*;


public class MiniCaffeTest {
    @Test public void testMiniCaffe() {
        if (Utils.GPUAvailable()) {
            Utils.SetCaffeMode(1, 0);
            System.out.println("Use GPU(0) to run model");
        } else {
            System.out.println("Use CPU to run model");
        }
        Utils.EnableProfiler();
        System.out.println("Create NIN");
        Net net = new Net("../build/model/nin.prototxt",
                          "../build/model/nin.caffemodel");
        net.markOutput("conv1");
        Utils.OpenScope("nin");
        testForward(net);
        Utils.CloseScope();
        Utils.DisableProfiler();
        Utils.DumpProfile("nin-profile.json");
        // test create from buffer
        System.out.println("Create ResNet from buffer");
        try {
            byte[] net_buffer, model_buffer;
            Path path = Paths.get("../build/model/resnet.prototxt");
            net_buffer = Files.readAllBytes(path);
            path = Paths.get("../build/model/resnet.caffemodel");
            model_buffer = Files.readAllBytes(path);
            net = new Net(net_buffer, model_buffer);
            testForward(net);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void testForward(Net net) {
        Blob blob = net.getBlob("data");
        // fill data
        int length = blob.data.length;
        for (int i = 0; i < length; i++) {
            blob.data[i] = (float)(Math.random() * 256 - 128);
        }
        blob.syncToC();
        // forward network
        long start = System.currentTimeMillis();
        net.forward();
        long end = System.currentTimeMillis();
        System.out.println("Forward Network costs " + (end - start) + " ms");
    }
}
